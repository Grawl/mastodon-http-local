version: '3'
services:

  db:
    restart: always
    image: postgres:9.6-alpine
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - ./postgres:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:5.0-alpine
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data

#  es:
#    restart: always
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.3
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    networks:
#      - internal_network
#    healthcheck:
#      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
#    volumes:
#      - ./elasticsearch:/usr/share/elasticsearch/data

  web:
    build:
      context: .
      dockerfile: ../Dockerfile
    # image: tootsuite/mastodon
    #image: novsyama/mastodon-http-local
    restart: always
    # env_file: .env.production
    env_file: .env.development
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000 -b '0.0.0.0'"
    networks:
      internal_network:
      external_network:
        ipv4_address: ${MSTDN_IPV4_WEB}
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --header 'x-forwarded-proto: https' --proxy=off localhost:3000/api/v1/instance || exit 1"]
    # ports:
    #   - "127.0.0.1:3000:3000"
    depends_on:
      - db
      - redis
#      - es
    volumes:
      #- ./.circleci:/mastodon/.circleci
      #- ./.dependabot:/mastodon/.dependabot
      #- ./.github:/mastodon/.github
      #- ./.git:/mastodon/.git
      - ./app:/mastodon/app
      - ./bin:/mastodon/bin
      - ./config:/mastodon/config
      - ./db:/mastodon/db
      - ./dist:/mastodon/dist
      - ./lib:/mastodon/lib
      - ./log:/mastodon/log
      - ./nanobox:/mastodon/nanobox
      - ./postgres:/mastodon/postgres
      - ./public:/mastodon/public
      - ./spec:/mastodon/spec
      #- ./streaming:/mastodon/streaming
      #- ./vendor:/mastodon/vendor
      - ./.buildpacks:/mastodon/.buildpacks
      - ./.codeclimate.yml:/mastodon/.codeclimate.yml
      #- ./.dockerignore:/mastodon/.dockerignore
      - ./.editorconfig:/mastodon/.editorconfig
      - ./.env:/mastodon/.env
      - ./.env.development:/mastodon/.env.development
      - ./.env.nanobox:/mastodon/.env.nanobox
      - ./.env.production:/mastodon/.env.production
      - ./.env.production.sample:/mastodon/.env.production.sample
      - ./.env.test:/mastodon/.env.test
      - ./.env.vagrant:/mastodon/.env.vagrant
      - ./.eslintignore:/mastodon/.eslintignore
      - ./.eslintrc.js:/mastodon/.eslintrc.js
      - ./.foreman:/mastodon/.foreman
      #- ./.gitattributes:/mastodon/.gitattributes
      - ./.gitignore:/mastodon/.gitignore
      - ./.haml-lint.yml:/mastodon/.haml-lint.yml
      - ./.nanoignore:/mastodon/.nanoignore
      - ./.nvmrc:/mastodon/.nvmrc
      - ./.profile:/mastodon/.profile
      - ./.rspec:/mastodon/.rspec
      - ./.rubocop.yml:/mastodon/.rubocop.yml
      - ./.ruby-version:/mastodon/.ruby-version
      - ./.sass-lint.yml:/mastodon/.sass-lint.yml
      - ./.slugignore:/mastodon/.slugignore
      - ./.yarnclean:/mastodon/.yarnclean
      - ./app.json:/mastodon/app.json
      - ./Aptfile:/mastodon/Aptfile
      - ./AUTHORS.md:/mastodon/AUTHORS.md
      - ./babel.config.js:/mastodon/babel.config.js
      - ./boxfile.yml:/mastodon/boxfile.yml
      - ./Capfile:/mastodon/Capfile
      - ./CHANGELOG.md:/mastodon/CHANGELOG.md
      - ./CODE_OF_CONDUCT.md:/mastodon/CODE_OF_CONDUCT.md
      - ./config.ru:/mastodon/config.ru
      - ./CONTRIBUTING.md:/mastodon/CONTRIBUTING.md
      - ./crowdin.yml:/mastodon/crowdin.yml
      #- ./docker-compose.override.yml:/mastodon/docker-compose.override.yml
      #- ./docker-compose.yml:/mastodon/docker-compose.yml
      #- ./Dockerfile:/mastodon/Dockerfile
      - ./Gemfile:/mastodon/Gemfile
      - ./Gemfile.lock:/mastodon/Gemfile.lock
      - ./ide-helper.js:/mastodon/ide-helper.js
      - ./LICENSE:/mastodon/LICENSE
      - ./package.json:/mastodon/package.json
      - ./postcss.config.js:/mastodon/postcss.config.js
      - ./priv-config:/mastodon/priv-config
      - ./Procfile:/mastodon/Procfile
      - ./Procfile.dev:/mastodon/Procfile.dev
      - ./Rakefile:/mastodon/Rakefile
      - ./README.md:/mastodon/README.md
      - ./scalingo.json:/mastodon/scalingo.json
      - ./Vagrantfile:/mastodon/Vagrantfile
      - ./yarn.lock:/mastodon/yarn.lock

  streaming:
    # build: .
    # image: tootsuite/mastodon
    image: novsyama/mastodon-http-local
    restart: always
    # env_file: .env.production
    env_file: .env.development
    command: yarn start
    networks:
      internal_network:
      external_network:
        ipv4_address: ${MSTDN_IPV4_STREAMING}
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --header 'x-forwarded-proto: https' --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    # ports:
    #   - "127.0.0.1:4000:4000"
    depends_on:
      - db
      - redis

  sidekiq:
    # build: .
    # image: tootsuite/mastodon
    image: novsyama/mastodon-http-local
    restart: always
    # env_file: .env.production
    env_file: .env.development
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
    networks:
      internal_network:
      external_network:
        ipv4_address: ${MSTDN_IPV4_SIDEKIQ}
    volumes:
      - ./public/system:/mastodon/public/system
## Uncomment to enable federation with tor instances along with adding the following ENV variables
## http_proxy=http://privoxy:8118
## ALLOW_ACCESS_TO_HIDDEN_SERVICE=true
#  tor:
#    image: sirboops/tor
#    networks:
#      - external_network
#      - internal_network
#
#  privoxy:
#    image: sirboops/privoxy
#    volumes:
#      - ./priv-config:/opt/config
#    networks:
#      - external_network
#      - internal_network

networks:
  external_network:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: ${MSTDN_SUBNET}
  internal_network:
    internal: true
